---
import Header from '@components/Header.astro'

interface Props {
  title: string
  description?: string
}

const {
  title,
  description = 'Lead, plataforma de liderzago de alto desempe√±o'
} = Astro.props

const image = 'https://aretopolis.com/logo.png'
---

<!doctype html>
<html lang='es'>
  <head>
    <meta charset='UTF-8' />
    <meta name='viewport' content='width=device-width, initial-scale=1.0' />

    <meta name='description' content={description} />
    <meta name='keywords' content='aditivos, plastico, colores, pellet' />
    <meta name='og:image' content={image} />
    <meta name='og:title' content={title} />
    <meta name='og:description' content={description} />
    <meta name='og:url' content='https://aretopolis.com' />
    <meta name='og:site_name' content='Aretopolis' />
    <meta name='og:type' content='website' />
    <meta name='og:locale' content='es_ES' />

    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <link rel='canonical' href='https://aretopolis.com' />

    <title>{title}</title>
  </head>
  <body>
    <Header />
    <slot />
  </body>
</html>
<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  @font-face {
    font-family: 'Plus Jakarta Sans';
    src: url('/fonts/PlusJakartaSans.woff2') format('woff2');
    font-style: swap;
  }

  html {
    font-family: 'Plus Jakarta Sans', system-ui, sans-serif;
    text-wrap-style: pretty;
    background-color: #f7f5f2;
  }

  body {
    display: flex;
    flex-direction: column;
    min-height: 100dvh;
  }

  input[type='radio'] {
    @apply appearance-none h-4 w-4 border border-gray-300 rounded-full checked:bg-black focus:outline-none focus:ring-[2px] focus:ring-offset-1 focus:ring-black relative;
  }

  input[type='radio']::before {
    content: '';
    display: block;
    width: 40%;
    height: 40%;
    border-radius: 50%;
    background-color: transparent;
    transition: background-color 0.2s;
    position: absolute;
    @apply top-1/2 -translate-y-1/2 left-1/2 -translate-x-1/2;
  }

  input[type='radio']:checked::before {
    background-color: white;
  }

  input[type='radio']:checked:focus,
  input[type='radio']:checked:hover {
    background-color: black;
  }

  dialog::backdrop {
    backdrop-filter: blur(4px);
  }
</style>

<script>
  const dialogs = document.getElementsByTagName('dialog')

  Array.from(dialogs).forEach((dialog) => {
    const buttonDialog = document.getElementById(`${dialog.id}-close-button`)

    const isOpen = dialog.getAttribute('data-open') === 'true'

    if (isOpen) {
      dialog.showModal()
    }

    buttonDialog?.addEventListener('click', function () {
      dialog.close()
    })

    dialog?.addEventListener('click', function (event) {
      const rect = dialog.getBoundingClientRect()
      const isInDialog =
        rect.top <= event.clientY &&
        event.clientY <= rect.top + rect.height &&
        rect.left <= event.clientX &&
        event.clientX <= rect.left + rect.width
      if (!isInDialog) {
        dialog.close()
      }
    })
  })
</script>
